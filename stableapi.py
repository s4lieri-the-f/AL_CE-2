import requests
import base64
from PIL import Image
from rich import print
from json import loads
import io

print(loads(requests.get('http://127.0.0.1:7860/sdapi/v1/options').content))
data = {
    'samples_save': True,
    'samples_format': 'png',
    'samples_filename_pattern': '',   
    'save_images_add_number': True,   
    'grid_save': True,
    'grid_format': 'png',
    'grid_extended_filename': False,  
    'grid_only_if_multiple': True,    
    'grid_prevent_empty_spots': False,
    'n_rows': -1.0,
    'enable_pnginfo': True,
    'save_txt': False,
    'save_images_before_face_restoration': False,
    'save_images_before_highres_fix': False,
    'save_images_before_color_correction': False,
    'save_mask': False,
    'save_mask_composite': False,
    'jpeg_quality': 80.0,
    'webp_lossless': False,
    'export_for_4chan': True,
    'img_downscale_threshold': 4.0,
    'target_side_length': 4000.0,
    'img_max_size_mp': 200.0,
    'use_original_name_batch': True,
    'use_upscaler_name_as_suffix': False,
    'save_selected_only': True,
    'do_not_add_watermark': False,
    'temp_dir': '',
    'clean_temp_dir_at_start': False,
    'outdir_samples': '',
    'outdir_txt2img_samples': 'outputs/txt2img-images',
    'outdir_img2img_samples': 'outputs/img2img-images',
    'outdir_extras_samples': 'outputs/extras-images',
    'outdir_grids': '',
    'outdir_txt2img_grids': 'outputs/txt2img-grids',
    'outdir_img2img_grids': 'outputs/img2img-grids',
    'outdir_save': 'log/images',
    'save_to_dirs': True,
    'grid_save_to_dirs': True,
    'use_save_to_dirs_for_ui': False,
    'directories_filename_pattern': '[date]',
    'directories_max_prompt_words': 8.0,
    'ESRGAN_tile': 192.0,
    'ESRGAN_tile_overlap': 8.0,
    'realesrgan_enabled_models': ['R-ESRGAN 4x+', 'R-ESRGAN 4x+ Anime6B'],
    'upscaler_for_img2img': None,
    'ldsr_steps': 100,
    'ldsr_cached': False,
    'SWIN_tile': 192,
    'SWIN_tile_overlap': 8,
    'face_restoration_model': 'CodeFormer',
    'code_former_weight': 0.5,
    'face_restoration_unload': False,
    'show_warnings': False,
    'memmon_poll_rate': 8.0,
    'samples_log_stdout': False,
    'multiple_tqdm': True,
    'print_hypernet_extra': False,
    'unload_models_when_training': False,
    'pin_memory': False,
    'save_optimizer_state': False,
    'save_training_settings_to_txt': True,
    'dataset_filename_word_regex': '',
    'dataset_filename_join_string': ' ',
    'training_image_repeats_per_epoch': 1.0,
    'training_write_csv_every': 500.0,
    'training_xattention_optimizations': False,
    'training_enable_tensorboard': False,
    'training_tensorboard_save_images': False,
    'training_tensorboard_flush_every': 120.0,
    'sd_model_checkpoint': 'hassakuHentaiModel_hassakuv1.safetensors [df614cd3c2]',
    'sd_checkpoint_cache': 0.0,
    'sd_vae_checkpoint_cache': 0.0,
    'sd_vae': 'Automatic',
    'sd_vae_as_default': True,
    'inpainting_mask_weight': 1.0,
    'initial_noise_multiplier': 1.0,
    'img2img_color_correction': False,
    'img2img_fix_steps': False,
    'img2img_background_color': '#ffffff',
    'enable_quantization': False,
    'enable_emphasis': True,
    'enable_batch_seeds': True,
    'comma_padding_backtrack': 20.0,
    'CLIP_stop_at_last_layers': 1.0,
    'upcast_attn': False,
    'use_old_emphasis_implementation': False,
    'use_old_karras_scheduler_sigmas': False,
    'no_dpmpp_sde_batch_determinism': False,
    'use_old_hires_fix_width_height': False,
    'interrogate_keep_models_in_memory': False,
    'interrogate_return_ranks': False,
    'interrogate_clip_num_beams': 1.0,
    'interrogate_clip_min_length': 24.0,
    'interrogate_clip_max_length': 48.0,
    'interrogate_clip_dict_limit': 1500.0,
    'interrogate_clip_skip_categories': [],
    'interrogate_deepbooru_score_threshold': 0.5,
    'deepbooru_sort_alpha': True,
    'deepbooru_use_spaces': False,
    'deepbooru_escape': True,
    'deepbooru_filter_tags': '',
    'extra_networks_default_view': 'cards',
    'extra_networks_default_multiplier': 1.0,
    'extra_networks_card_width': 0.0,
    'extra_networks_card_height': 0.0,
    'extra_networks_add_text_separator': ' ',
    'sd_hypernetwork': 'None',
    'sd_lora': 'None',
    'return_grid': True,
    'return_mask': False,
    'return_mask_composite': False,
    'do_not_show_images': False,
    'add_model_hash_to_info': True,
    'add_model_name_to_info': True,
    'disable_weights_auto_swap': True,
    'send_seed': True,
    'send_size': True,
    'font': '',
    'js_modal_lightbox': True,
    'js_modal_lightbox_initially_zoomed': True,
    'show_progress_in_title': True,
    'samplers_in_dropdown': True,
    'dimensions_and_batch_together': True,
    'keyedit_precision_attention': 0.1,
    'keyedit_precision_extra': 0.05,
    'quicksettings': 'sd_model_checkpoint',
    'hidden_tabs': [],
    'ui_reorder': 'inpaint, sampler, checkboxes, hires_fix, dimensions, cfg, seed, batch, override_settings, scripts',
    'ui_extra_networks_tab_reorder': '',
    'localization': 'None',
    'show_progressbar': True,
    'live_previews_enable': True,
    'show_progress_grid': True,
    'show_progress_every_n_steps': 10.0,
    'show_progress_type': 'Approx NN',
    'live_preview_content': 'Prompt',
    'live_preview_refresh_period': 1000.0,
    'hide_samplers': [],
    'eta_ddim': 0.0,
    'eta_ancestral': 1.0,
    'ddim_discretize': 'uniform',
    's_churn': 0.0,
    's_tmin': 0.0,
    's_noise': 1.0,
    'eta_noise_seed_delta': 0.0,
    'always_discard_next_to_last_sigma': False,
    'uni_pc_variant': 'bh1',
    'uni_pc_skip_type': 'time_uniform',
    'uni_pc_order': 3.0,
    'uni_pc_lower_order_final': True,
    'postprocessing_enable_in_main_ui': [],
    'postprocessing_operation_order': [],
    'upscaling_max_images_in_cache': 5.0,
    'disabled_extensions': [],
    'disable_all_extensions': 'none',
    'sd_checkpoint_hash': 'df614cd3c2a592e5e6eb4e8dfafe83c58de750781b6390bdd6b449b73315ce4b'
}

txt2img = {
  "enable_hr": False,
  "denoising_strength": 0,
  "firstphase_width": 0,
  "firstphase_height": 0,
  "prompt": "{best quality}, {{masterpiece}}, {highres}, extremely detailed girl, solo, sharp focus, {{{{{{{{white background}}}}}}}}, {{{character{{{1 girl}}}}}}, solo,standing, {{{{{sharp focus}}}}}, {{{{{masterpiece character design reference sheet}}}}},{{{{full body}}}}, {{{{medium shot}}}}, shiny hair, {{{{{wavy ponytail}}}}}, hair over shoulder, very long hair, very thick hair, {{{{{{{{{{{{two-tone hair}}}}}}}}}}}}, silver hair, {{{{{{{extra short bangs}}}}}}}, (((((creepy detailed red eyes))))), heavy breathing, {{{rusty {{armored}} dress}}}, {{{{{{{{emphasis lines}}}}}}}}}, red crystal horns, small breast, longsword",
  "styles": [
    "string"
  ],
  "seed": -1,
  "subseed": -1,
  "subseed_strength": 0,
  "seed_resize_from_h": -1,
  "seed_resize_from_w": -1,
  "sampler_name": "DDIM",
  "batch_size": 1,
  "n_iter": 1,
  "steps": 55,
  "cfg_scale": 8,
  "width": 320,
  "height": 716,
  "restore_faces": False,
  "tiling": False,
  "do_not_save_samples": False,
  "do_not_save_grid": False,
  "negative_prompt": "lowres, polar lowres, bad anatomy, bad face, bad hands, bad body, bad feet, bad proportions, {bad leg}, {more legs}, worst quality, low quality, normal quality, gross proportions, blurry, poorly drawn, {{{text}}}, error, missing fingers, missing arms, missing legs, malformed hands, mutated, mutation, {{{short legs}}}, extra digit, 2girls, long skirt, indoors, out of frame, only_upper body, only_lower body, [petite],{{{{{black background}}}}}, {{{{{{{colored background}}}}}}}, {{{print}}}, {chibi}, {only head}, {{color palette}}, 3d, creepy mouth",
  "sampler_index": "Euler",
  "send_images": True,
  "save_images": True
}

r = loads(requests.post(url=f'http://127.0.0.1:7860/sdapi/v1/txt2img', json=txt2img).content)
print(r)
for i in r['images']:
    image = Image.open(io.BytesIO(base64.b64decode(i.split(",",1)[0])))
    image.show()